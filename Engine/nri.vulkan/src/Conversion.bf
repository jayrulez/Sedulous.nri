using Bulkan;
namespace nri.vulkan;

public static
{
	public static Result GetReturnCode(VkResult result)
	{
		switch (result)
		{
		case .VK_SUCCESS,
			.VK_EVENT_SET,
			.VK_EVENT_RESET:
			return Result.SUCCESS;

		case .VK_ERROR_DEVICE_LOST:
			return Result.DEVICE_LOST;

		case .VK_ERROR_SURFACE_LOST_KHR,
			.VK_ERROR_OUT_OF_DATE_KHR:
			return Result.SWAPCHAIN_RESIZE;

		case .VK_ERROR_NATIVE_WINDOW_IN_USE_KHR,
			.VK_ERROR_INCOMPATIBLE_DISPLAY_KHR,
			.VK_ERROR_FORMAT_NOT_SUPPORTED,
			.VK_ERROR_INCOMPATIBLE_DRIVER,
			.VK_ERROR_FEATURE_NOT_PRESENT,
			.VK_ERROR_EXTENSION_NOT_PRESENT,
			.VK_ERROR_LAYER_NOT_PRESENT:
			return Result.UNSUPPORTED;

		case .VK_ERROR_INVALID_EXTERNAL_HANDLE,
			.VK_ERROR_VALIDATION_FAILED_EXT,
			.VK_ERROR_INVALID_SHADER_NV,
			.VK_ERROR_NOT_PERMITTED_KHR,
			.VK_SUBOPTIMAL_KHR,
			.VK_ERROR_TOO_MANY_OBJECTS,
			.VK_ERROR_MEMORY_MAP_FAILED,
			.VK_ERROR_INITIALIZATION_FAILED,
			.VK_INCOMPLETE,
			.VK_TIMEOUT,
			.VK_NOT_READY:
			return Result.FAILURE;

		case .VK_ERROR_OUT_OF_HOST_MEMORY,
			.VK_ERROR_OUT_OF_DEVICE_MEMORY,
			.VK_ERROR_OUT_OF_POOL_MEMORY,
			.VK_ERROR_FRAGMENTATION,
			.VK_ERROR_FRAGMENTED_POOL:
			return Result.OUT_OF_MEMORY;

		default:
			return Result.FAILURE;
		}
	}
}